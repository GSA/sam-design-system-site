.DS_store
.*.swp

# Ignore the generated Jekyll site
#
_site/

# Ignore the Sass cache generated by compiling Sass
#
.sass-cache/

# Ignore Node specific files and directories
#
# Note: Only ignore the root-level node_modules directory
#
/node_modules/
npm-debug.log

# README: Ignore the dist directories
# 
# Note: Not sure this is necessary yet
#
dist/

# Ignore the .bundle directory used for bundle config & local-gem development
#
# Note: Not sure this is necessary
#
.bundle/

# Ignore gulp-generated generated files.
#
# Note: The contents of the assets directory is used by Jekyll for CSS, JS, Images, and
#       fonts. The contents are generated by the various Gulp commands. Not ignoring
#       this directory could cause a lot of merge conflicts. However, at this juncture
#       the default gh-pages workflow will not run the necessary commands. Therefore,
#       we should see if it is possible to do so by using web hooks or an integration
#       provider to perform the Jekyll build and Gulp commands.
#
# /assets/
# !assets/img
# !assets/css/homepage.scss
# !assets/css/prism.css
# !assets/css/styleguide.scss
# !assets/js/styleguide.js

